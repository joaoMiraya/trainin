services:
  api:
    container_name: trainin
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=trainin_database;User=admin;Password=passwd;
    depends_on:
      db:
        condition: service_healthy

  db:
    build:
      context: ./Infrastructure/Persistence
      dockerfile: Dockerfile
    container_name: trainin_database
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: trainin_database
      MYSQL_USER: admin
      MYSQL_PASSWORD: passwd
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/trainin_mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uadmin", "-ppasswd"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - trainin_network    

  redis:
    image: redis:7.4.1-alpine
    container_name: redis-server
    restart: unless-stopped
    volumes:
      - redis_volume_data:/data
    ports:
      - 6379:6379
    networks:
      - trainin_network

  redis_insight:
    image: redislabs/redisinsight:1.14.0
    container_name: redis_insight
    restart: unless-stopped
    ports:
      - 8001:8001
    volumes:
      - redis_insight_volume_data:/db
    networks:
      - trainin_network

volumes:
  mysql_data:
  redis_volume_data:
  redis_insight_volume_data:
networks:
  trainin_network:
    driver: bridge
